// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.15.8
// source: store/store.proto

package store

import (
	common "github.com/cargod-bj/b2c-proto-common/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StoreInvalidTimeDTOList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreInvalidTimeDTOs []*StoreInvalidTimeDTO `protobuf:"bytes,1,rep,name=StoreInvalidTimeDTOs,proto3" json:"StoreInvalidTimeDTOs,omitempty"`
	TimeSlotCacheList    []*TimeSlotEle         `protobuf:"bytes,2,rep,name=TimeSlotCacheList,proto3" json:"TimeSlotCacheList,omitempty"`
	StoreId              uint64                 `protobuf:"varint,3,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Date                 string                 `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *StoreInvalidTimeDTOList) Reset() {
	*x = StoreInvalidTimeDTOList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreInvalidTimeDTOList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInvalidTimeDTOList) ProtoMessage() {}

func (x *StoreInvalidTimeDTOList) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInvalidTimeDTOList.ProtoReflect.Descriptor instead.
func (*StoreInvalidTimeDTOList) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{0}
}

func (x *StoreInvalidTimeDTOList) GetStoreInvalidTimeDTOs() []*StoreInvalidTimeDTO {
	if x != nil {
		return x.StoreInvalidTimeDTOs
	}
	return nil
}

func (x *StoreInvalidTimeDTOList) GetTimeSlotCacheList() []*TimeSlotEle {
	if x != nil {
		return x.TimeSlotCacheList
	}
	return nil
}

func (x *StoreInvalidTimeDTOList) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoreInvalidTimeDTOList) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type StoreInvalidTimeDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StoreId    uint64 `protobuf:"varint,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	BeginTime  int64  `protobuf:"varint,3,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	Type       uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	CreateTime int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	EndTime    int64  `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *StoreInvalidTimeDTO) Reset() {
	*x = StoreInvalidTimeDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreInvalidTimeDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInvalidTimeDTO) ProtoMessage() {}

func (x *StoreInvalidTimeDTO) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInvalidTimeDTO.ProtoReflect.Descriptor instead.
func (*StoreInvalidTimeDTO) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{1}
}

func (x *StoreInvalidTimeDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreInvalidTimeDTO) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoreInvalidTimeDTO) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *StoreInvalidTimeDTO) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *StoreInvalidTimeDTO) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *StoreInvalidTimeDTO) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *StoreInvalidTimeDTO) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type IdDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdDTO) Reset() {
	*x = IdDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdDTO) ProtoMessage() {}

func (x *IdDTO) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdDTO.ProtoReflect.Descriptor instead.
func (*IdDTO) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{2}
}

func (x *IdDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 指定的一组ids
type IdsDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsDto) Reset() {
	*x = IdsDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsDto) ProtoMessage() {}

func (x *IdsDto) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsDto.ProtoReflect.Descriptor instead.
func (*IdsDto) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{3}
}

func (x *IdsDto) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 生成timeslot参数
type GenTimeSlotParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDay string `protobuf:"bytes,1,opt,name=startDay,proto3" json:"startDay,omitempty"`
	Days     uint64 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *GenTimeSlotParam) Reset() {
	*x = GenTimeSlotParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenTimeSlotParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenTimeSlotParam) ProtoMessage() {}

func (x *GenTimeSlotParam) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenTimeSlotParam.ProtoReflect.Descriptor instead.
func (*GenTimeSlotParam) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{4}
}

func (x *GenTimeSlotParam) GetStartDay() string {
	if x != nil {
		return x.StartDay
	}
	return ""
}

func (x *GenTimeSlotParam) GetDays() uint64 {
	if x != nil {
		return x.Days
	}
	return 0
}

type StoreDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Telephone                      string `protobuf:"bytes,3,opt,name=telephone,proto3" json:"telephone,omitempty"`
	ManagerId                      uint64 `protobuf:"varint,4,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
	Logo                           string `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	Photos                         string `protobuf:"bytes,6,opt,name=photos,proto3" json:"photos,omitempty"`
	Address                        string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	Description                    string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	City                           string `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	CreateTime                     int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime                     int64  `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Status                         uint32 `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	DealerId                       uint64 `protobuf:"varint,13,opt,name=dealerId,proto3" json:"dealerId,omitempty"`
	OpenHours                      string `protobuf:"bytes,14,opt,name=openHours,proto3" json:"openHours,omitempty"`
	TestDriverServiceHours         string `protobuf:"bytes,15,opt,name=testDriverServiceHours,proto3" json:"testDriverServiceHours,omitempty"`
	Type                           uint32 `protobuf:"varint,16,opt,name=type,proto3" json:"type,omitempty"`
	State                          string `protobuf:"bytes,17,opt,name=state,proto3" json:"state,omitempty"`
	ManagerName                    string `protobuf:"bytes,19,opt,name=managerName,proto3" json:"managerName,omitempty"`
	AddressUrl                     string `protobuf:"bytes,20,opt,name=addressUrl,proto3" json:"addressUrl,omitempty"`
	OpenDay                        int64  `protobuf:"varint,21,opt,name=openDay,proto3" json:"openDay,omitempty"`
	TestDriverWarningWorkingNumber int64  `protobuf:"varint,22,opt,name=testDriverWarningWorkingNumber,proto3" json:"testDriverWarningWorkingNumber,omitempty"`
	TestDriverWarningWeekendNumber int64  `protobuf:"varint,23,opt,name=testDriverWarningWeekendNumber,proto3" json:"testDriverWarningWeekendNumber,omitempty"`
	OtherHolidays                  string `protobuf:"bytes,24,opt,name=otherHolidays,proto3" json:"otherHolidays,omitempty"`
}

func (x *StoreDTO) Reset() {
	*x = StoreDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDTO) ProtoMessage() {}

func (x *StoreDTO) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDTO.ProtoReflect.Descriptor instead.
func (*StoreDTO) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{5}
}

func (x *StoreDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreDTO) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *StoreDTO) GetManagerId() uint64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *StoreDTO) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *StoreDTO) GetPhotos() string {
	if x != nil {
		return x.Photos
	}
	return ""
}

func (x *StoreDTO) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreDTO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreDTO) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *StoreDTO) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *StoreDTO) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *StoreDTO) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StoreDTO) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *StoreDTO) GetOpenHours() string {
	if x != nil {
		return x.OpenHours
	}
	return ""
}

func (x *StoreDTO) GetTestDriverServiceHours() string {
	if x != nil {
		return x.TestDriverServiceHours
	}
	return ""
}

func (x *StoreDTO) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *StoreDTO) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StoreDTO) GetManagerName() string {
	if x != nil {
		return x.ManagerName
	}
	return ""
}

func (x *StoreDTO) GetAddressUrl() string {
	if x != nil {
		return x.AddressUrl
	}
	return ""
}

func (x *StoreDTO) GetOpenDay() int64 {
	if x != nil {
		return x.OpenDay
	}
	return 0
}

func (x *StoreDTO) GetTestDriverWarningWorkingNumber() int64 {
	if x != nil {
		return x.TestDriverWarningWorkingNumber
	}
	return 0
}

func (x *StoreDTO) GetTestDriverWarningWeekendNumber() int64 {
	if x != nil {
		return x.TestDriverWarningWeekendNumber
	}
	return 0
}

func (x *StoreDTO) GetOtherHolidays() string {
	if x != nil {
		return x.OtherHolidays
	}
	return ""
}

type StoreListDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Telephone                      string `protobuf:"bytes,3,opt,name=telephone,proto3" json:"telephone,omitempty"`
	ManagerId                      uint64 `protobuf:"varint,4,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
	Logo                           string `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	Photos                         string `protobuf:"bytes,6,opt,name=photos,proto3" json:"photos,omitempty"`
	Address                        string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	Description                    string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	City                           string `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	CreateTime                     int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime                     int64  `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Status                         uint32 `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	DealerId                       uint64 `protobuf:"varint,13,opt,name=dealerId,proto3" json:"dealerId,omitempty"`
	OpenHours                      string `protobuf:"bytes,14,opt,name=openHours,proto3" json:"openHours,omitempty"`
	TestDriverServiceHours         string `protobuf:"bytes,15,opt,name=testDriverServiceHours,proto3" json:"testDriverServiceHours,omitempty"`
	Type                           uint32 `protobuf:"varint,16,opt,name=type,proto3" json:"type,omitempty"`
	State                          string `protobuf:"bytes,17,opt,name=state,proto3" json:"state,omitempty"`
	StateName                      string `protobuf:"bytes,18,opt,name=stateName,proto3" json:"stateName,omitempty"`
	CityName                       string `protobuf:"bytes,19,opt,name=cityName,proto3" json:"cityName,omitempty"`
	StatusDescription              string `protobuf:"bytes,20,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	ManagerName                    string `protobuf:"bytes,21,opt,name=managerName,proto3" json:"managerName,omitempty"`
	DealershipName                 string `protobuf:"bytes,23,opt,name=dealershipName,proto3" json:"dealershipName,omitempty"`
	AddressUrl                     string `protobuf:"bytes,24,opt,name=addressUrl,proto3" json:"addressUrl,omitempty"`
	OpenDay                        int64  `protobuf:"varint,25,opt,name=openDay,proto3" json:"openDay,omitempty"`
	TestDriverWarningWorkingNumber int64  `protobuf:"varint,26,opt,name=testDriverWarningWorkingNumber,proto3" json:"testDriverWarningWorkingNumber,omitempty"`
	TestDriverWarningWeekendNumber int64  `protobuf:"varint,27,opt,name=testDriverWarningWeekendNumber,proto3" json:"testDriverWarningWeekendNumber,omitempty"`
	OtherHolidays                  string `protobuf:"bytes,28,opt,name=otherHolidays,proto3" json:"otherHolidays,omitempty"`
}

func (x *StoreListDTO) Reset() {
	*x = StoreListDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreListDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreListDTO) ProtoMessage() {}

func (x *StoreListDTO) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreListDTO.ProtoReflect.Descriptor instead.
func (*StoreListDTO) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{6}
}

func (x *StoreListDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreListDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreListDTO) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *StoreListDTO) GetManagerId() uint64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *StoreListDTO) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *StoreListDTO) GetPhotos() string {
	if x != nil {
		return x.Photos
	}
	return ""
}

func (x *StoreListDTO) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreListDTO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreListDTO) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *StoreListDTO) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *StoreListDTO) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *StoreListDTO) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StoreListDTO) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *StoreListDTO) GetOpenHours() string {
	if x != nil {
		return x.OpenHours
	}
	return ""
}

func (x *StoreListDTO) GetTestDriverServiceHours() string {
	if x != nil {
		return x.TestDriverServiceHours
	}
	return ""
}

func (x *StoreListDTO) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *StoreListDTO) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StoreListDTO) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *StoreListDTO) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *StoreListDTO) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *StoreListDTO) GetManagerName() string {
	if x != nil {
		return x.ManagerName
	}
	return ""
}

func (x *StoreListDTO) GetDealershipName() string {
	if x != nil {
		return x.DealershipName
	}
	return ""
}

func (x *StoreListDTO) GetAddressUrl() string {
	if x != nil {
		return x.AddressUrl
	}
	return ""
}

func (x *StoreListDTO) GetOpenDay() int64 {
	if x != nil {
		return x.OpenDay
	}
	return 0
}

func (x *StoreListDTO) GetTestDriverWarningWorkingNumber() int64 {
	if x != nil {
		return x.TestDriverWarningWorkingNumber
	}
	return 0
}

func (x *StoreListDTO) GetTestDriverWarningWeekendNumber() int64 {
	if x != nil {
		return x.TestDriverWarningWeekendNumber
	}
	return 0
}

func (x *StoreListDTO) GetOtherHolidays() string {
	if x != nil {
		return x.OtherHolidays
	}
	return ""
}

// store的简单信息dto
type StoreSimpleDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StoreSimpleDto) Reset() {
	*x = StoreSimpleDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSimpleDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSimpleDto) ProtoMessage() {}

func (x *StoreSimpleDto) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSimpleDto.ProtoReflect.Descriptor instead.
func (*StoreSimpleDto) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{7}
}

func (x *StoreSimpleDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreSimpleDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StoreCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *common.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DealerId   uint64       `protobuf:"varint,3,opt,name=dealerId,proto3" json:"dealerId,omitempty"`
	DealerType uint32       `protobuf:"varint,4,opt,name=dealerType,proto3" json:"dealerType,omitempty"`
}

func (x *StoreCondition) Reset() {
	*x = StoreCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreCondition) ProtoMessage() {}

func (x *StoreCondition) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreCondition.ProtoReflect.Descriptor instead.
func (*StoreCondition) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{8}
}

func (x *StoreCondition) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *StoreCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreCondition) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *StoreCondition) GetDealerType() uint32 {
	if x != nil {
		return x.DealerType
	}
	return 0
}

//获取timeslot条件
type GetTimeSlotCon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	StoreId uint64 `protobuf:"varint,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
}

func (x *GetTimeSlotCon) Reset() {
	*x = GetTimeSlotCon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSlotCon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSlotCon) ProtoMessage() {}

func (x *GetTimeSlotCon) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSlotCon.ProtoReflect.Descriptor instead.
func (*GetTimeSlotCon) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{9}
}

func (x *GetTimeSlotCon) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetTimeSlotCon) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

//timeslot 信息列表
type TimeSlotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TimeSlotEle `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TimeSlotList) Reset() {
	*x = TimeSlotList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlotList) ProtoMessage() {}

func (x *TimeSlotList) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlotList.ProtoReflect.Descriptor instead.
func (*TimeSlotList) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{10}
}

func (x *TimeSlotList) GetList() []*TimeSlotEle {
	if x != nil {
		return x.List
	}
	return nil
}

type TimeSlotEle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime int64 `protobuf:"varint,1,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Status    int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Count     int64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TimeSlotEle) Reset() {
	*x = TimeSlotEle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlotEle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlotEle) ProtoMessage() {}

func (x *TimeSlotEle) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlotEle.ProtoReflect.Descriptor instead.
func (*TimeSlotEle) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{11}
}

func (x *TimeSlotEle) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *TimeSlotEle) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TimeSlotEle) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TimeSlotEle) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AddAppointmentCon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId   uint64 `protobuf:"varint,1,opt,name=storeId,proto3" json:"storeId,omitempty"`
	BeginTime int64  `protobuf:"varint,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime   int64  `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	UserId    uint64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *AddAppointmentCon) Reset() {
	*x = AddAppointmentCon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppointmentCon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppointmentCon) ProtoMessage() {}

func (x *AddAppointmentCon) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppointmentCon.ProtoReflect.Descriptor instead.
func (*AddAppointmentCon) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{12}
}

func (x *AddAppointmentCon) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *AddAppointmentCon) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *AddAppointmentCon) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AddAppointmentCon) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type StoreInvalidTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *common.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Id   uint64       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoreInvalidTime) Reset() {
	*x = StoreInvalidTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreInvalidTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInvalidTime) ProtoMessage() {}

func (x *StoreInvalidTime) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInvalidTime.ProtoReflect.Descriptor instead.
func (*StoreInvalidTime) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{13}
}

func (x *StoreInvalidTime) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *StoreInvalidTime) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TimeSlotStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date                  string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	TestDriveServiceHours string `protobuf:"bytes,3,opt,name=testDriveServiceHours,proto3" json:"testDriveServiceHours,omitempty"`
	Type                  uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TimeSlotStatusReq) Reset() {
	*x = TimeSlotStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlotStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlotStatusReq) ProtoMessage() {}

func (x *TimeSlotStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlotStatusReq.ProtoReflect.Descriptor instead.
func (*TimeSlotStatusReq) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{14}
}

func (x *TimeSlotStatusReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TimeSlotStatusReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TimeSlotStatusReq) GetTestDriveServiceHours() string {
	if x != nil {
		return x.TestDriveServiceHours
	}
	return ""
}

func (x *TimeSlotStatusReq) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type TimeSlotStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime     int64  `protobuf:"varint,1,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime       int64  `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Status        int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	InvalidTimeId uint64 `protobuf:"varint,4,opt,name=invalidTimeId,proto3" json:"invalidTimeId,omitempty"`
}

func (x *TimeSlotStatusResp) Reset() {
	*x = TimeSlotStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_store_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlotStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlotStatusResp) ProtoMessage() {}

func (x *TimeSlotStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_store_store_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlotStatusResp.ProtoReflect.Descriptor instead.
func (*TimeSlotStatusResp) Descriptor() ([]byte, []int) {
	return file_store_store_proto_rawDescGZIP(), []int{15}
}

func (x *TimeSlotStatusResp) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *TimeSlotStatusResp) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TimeSlotStatusResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TimeSlotStatusResp) GetInvalidTimeId() uint64 {
	if x != nil {
		return x.InvalidTimeId
	}
	return 0
}

var File_store_store_proto protoreflect.FileDescriptor

var file_store_store_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x39, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a,
	0x2f, 0x62, 0x32, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x4e, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x14, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f,
	0x73, 0x12, 0x40, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x6c, 0x65,
	0x52, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x17, 0x0a, 0x05, 0x49, 0x64, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x64, 0x73, 0x44,
	0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0xed, 0x05, 0x0a, 0x08, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65,
	0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e,
	0x44, 0x61, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x44,
	0x61, 0x79, 0x12, 0x46, 0x0a, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x74, 0x65, 0x73, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x1e, 0x74, 0x65,
	0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57,
	0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x57, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x73, 0x22, 0x81, 0x07, 0x0a, 0x0c, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x65, 0x73, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x61, 0x6c, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x46, 0x0a, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e,
	0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x48,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x73, 0x22, 0x34, 0x0a, 0x0e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x73, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01,
	0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x32, 0x8c, 0x09, 0x0a, 0x05, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x54, 0x4f, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x54, 0x4f, 0x1a, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x28, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x64, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x0d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x73, 0x44, 0x74, 0x6f, 0x1a,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x73, 0x44,
	0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54,
	0x4f, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x43,
	0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x13, 0x4d, 0x69, 0x6e,
	0x75, 0x73, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x12, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x73, 0x44, 0x74, 0x6f, 0x1a, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x54, 0x4f, 0x1a, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x44, 0x54, 0x4f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62,
	0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_store_store_proto_rawDescOnce sync.Once
	file_store_store_proto_rawDescData = file_store_store_proto_rawDesc
)

func file_store_store_proto_rawDescGZIP() []byte {
	file_store_store_proto_rawDescOnce.Do(func() {
		file_store_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_store_store_proto_rawDescData)
	})
	return file_store_store_proto_rawDescData
}

var file_store_store_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_store_store_proto_goTypes = []interface{}{
	(*StoreInvalidTimeDTOList)(nil), // 0: store.StoreInvalidTimeDTOList
	(*StoreInvalidTimeDTO)(nil),     // 1: store.StoreInvalidTimeDTO
	(*IdDTO)(nil),                   // 2: store.IdDTO
	(*IdsDto)(nil),                  // 3: store.IdsDto
	(*GenTimeSlotParam)(nil),        // 4: store.GenTimeSlotParam
	(*StoreDTO)(nil),                // 5: store.StoreDTO
	(*StoreListDTO)(nil),            // 6: store.StoreListDTO
	(*StoreSimpleDto)(nil),          // 7: store.StoreSimpleDto
	(*StoreCondition)(nil),          // 8: store.StoreCondition
	(*GetTimeSlotCon)(nil),          // 9: store.GetTimeSlotCon
	(*TimeSlotList)(nil),            // 10: store.TimeSlotList
	(*TimeSlotEle)(nil),             // 11: store.TimeSlotEle
	(*AddAppointmentCon)(nil),       // 12: store.AddAppointmentCon
	(*StoreInvalidTime)(nil),        // 13: store.StoreInvalidTime
	(*TimeSlotStatusReq)(nil),       // 14: store.TimeSlotStatusReq
	(*TimeSlotStatusResp)(nil),      // 15: store.TimeSlotStatusResp
	(*common.Page)(nil),             // 16: common.Page
	(*common.IdDto)(nil),            // 17: common.IdDto
	(*common.Response)(nil),         // 18: common.Response
}
var file_store_store_proto_depIdxs = []int32{
	1,  // 0: store.StoreInvalidTimeDTOList.StoreInvalidTimeDTOs:type_name -> store.StoreInvalidTimeDTO
	11, // 1: store.StoreInvalidTimeDTOList.TimeSlotCacheList:type_name -> store.TimeSlotEle
	16, // 2: store.StoreCondition.page:type_name -> common.Page
	11, // 3: store.TimeSlotList.list:type_name -> store.TimeSlotEle
	16, // 4: store.StoreInvalidTime.page:type_name -> common.Page
	5,  // 5: store.Store.Add:input_type -> store.StoreDTO
	8,  // 6: store.Store.List:input_type -> store.StoreCondition
	5,  // 7: store.Store.Update:input_type -> store.StoreDTO
	17, // 8: store.Store.Delete:input_type -> common.IdDto
	17, // 9: store.Store.Get:input_type -> common.IdDto
	3,  // 10: store.Store.ListSimpleInfoByIds:input_type -> store.IdsDto
	3,  // 11: store.Store.ListLocation:input_type -> store.IdsDto
	13, // 12: store.Store.ListStoreInvalidTimeDTO:input_type -> store.StoreInvalidTime
	1,  // 13: store.Store.AddOrUpdate:input_type -> store.StoreInvalidTimeDTO
	0,  // 14: store.Store.AddOrUpdateList:input_type -> store.StoreInvalidTimeDTOList
	4,  // 15: store.Store.GenTimeSlotCache:input_type -> store.GenTimeSlotParam
	9,  // 16: store.Store.GetTimeSlotCache:input_type -> store.GetTimeSlotCon
	9,  // 17: store.Store.GetTimeSlotCacheAll:input_type -> store.GetTimeSlotCon
	12, // 18: store.Store.AddAppointmentNum:input_type -> store.AddAppointmentCon
	12, // 19: store.Store.MinusAppointmentNum:input_type -> store.AddAppointmentCon
	14, // 20: store.Store.GetTimeSlotStatusList:input_type -> store.TimeSlotStatusReq
	3,  // 21: store.Store.DeleteStoreInvalidTime:input_type -> store.IdsDto
	1,  // 22: store.Store.DeleteCacheStoreInvalidTime:input_type -> store.StoreInvalidTimeDTO
	1,  // 23: store.Store.ListStoreInvalidTime:input_type -> store.StoreInvalidTimeDTO
	18, // 24: store.Store.Add:output_type -> common.Response
	18, // 25: store.Store.List:output_type -> common.Response
	18, // 26: store.Store.Update:output_type -> common.Response
	18, // 27: store.Store.Delete:output_type -> common.Response
	18, // 28: store.Store.Get:output_type -> common.Response
	18, // 29: store.Store.ListSimpleInfoByIds:output_type -> common.Response
	18, // 30: store.Store.ListLocation:output_type -> common.Response
	18, // 31: store.Store.ListStoreInvalidTimeDTO:output_type -> common.Response
	18, // 32: store.Store.AddOrUpdate:output_type -> common.Response
	18, // 33: store.Store.AddOrUpdateList:output_type -> common.Response
	18, // 34: store.Store.GenTimeSlotCache:output_type -> common.Response
	18, // 35: store.Store.GetTimeSlotCache:output_type -> common.Response
	18, // 36: store.Store.GetTimeSlotCacheAll:output_type -> common.Response
	18, // 37: store.Store.AddAppointmentNum:output_type -> common.Response
	18, // 38: store.Store.MinusAppointmentNum:output_type -> common.Response
	18, // 39: store.Store.GetTimeSlotStatusList:output_type -> common.Response
	18, // 40: store.Store.DeleteStoreInvalidTime:output_type -> common.Response
	18, // 41: store.Store.DeleteCacheStoreInvalidTime:output_type -> common.Response
	18, // 42: store.Store.ListStoreInvalidTime:output_type -> common.Response
	24, // [24:43] is the sub-list for method output_type
	5,  // [5:24] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_store_store_proto_init() }
func file_store_store_proto_init() {
	if File_store_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_store_store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreInvalidTimeDTOList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreInvalidTimeDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdsDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenTimeSlotParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreListDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSimpleDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSlotCon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlotList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlotEle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppointmentCon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreInvalidTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlotStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_store_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlotStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_store_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_store_store_proto_goTypes,
		DependencyIndexes: file_store_store_proto_depIdxs,
		MessageInfos:      file_store_store_proto_msgTypes,
	}.Build()
	File_store_store_proto = out.File
	file_store_store_proto_rawDesc = nil
	file_store_store_proto_goTypes = nil
	file_store_store_proto_depIdxs = nil
}
